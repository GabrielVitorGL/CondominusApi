// <auto-generated />
using System;
using CondominusApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CondominusApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CondominusApi.Models.ApartPessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int>("IdApartamento")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdPessoa", "IdApartamento");

                    b.HasIndex("IdApartamento");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ApartPessoas");
                });

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCondominio")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCondominio");

                    b.ToTable("Apartamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCondominio = 1,
                            Numero = "A001",
                            Telefone = "11912345678"
                        },
                        new
                        {
                            Id = 2,
                            IdCondominio = 1,
                            Numero = "B002",
                            Telefone = "11912345678"
                        },
                        new
                        {
                            Id = 3,
                            IdCondominio = 1,
                            Numero = "C003",
                            Telefone = "11887654321"
                        },
                        new
                        {
                            Id = 4,
                            IdCondominio = 1,
                            Numero = "E005",
                            Telefone = "11955555555"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.AreaComum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AreasComuns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidade = 50,
                            Nome = "Salão de Festas"
                        },
                        new
                        {
                            Id = 2,
                            Capacidade = 30,
                            Nome = "Churrasqueira"
                        },
                        new
                        {
                            Id = 3,
                            Capacidade = 20,
                            Nome = "Sala de Jogos"
                        },
                        new
                        {
                            Id = 4,
                            Capacidade = 10,
                            Nome = "Piscina"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Aviso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Assunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Avisos");
                });

            modelBuilder.Entity("CondominusApi.Models.Condominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Condominios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Endereco = "Rua Guaranésia, 1070",
                            Nome = "Vila Nova Maria"
                        },
                        new
                        {
                            Id = 2,
                            Endereco = "Rua Paulo Andrighetti, 1573",
                            Nome = "Condomínio Aquarella Pari Colore"
                        },
                        new
                        {
                            Id = 3,
                            Endereco = "Rua Paulo Andrighetti, 449",
                            Nome = "Condomínio Edifício Antônio Walter Santiago"
                        },
                        new
                        {
                            Id = 4,
                            Endereco = "Rua Eugênio de Freitas, 525",
                            Nome = "Condomínio Edifício Veneza"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Dependente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPessoa");

                    b.ToTable("Dependentes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdPessoa = 1,
                            Nome = "João Gomes",
                            Telefone = "11924316523"
                        },
                        new
                        {
                            Id = 2,
                            IdPessoa = 1,
                            Nome = "Maria Silva",
                            Telefone = "11876543210"
                        },
                        new
                        {
                            Id = 3,
                            IdPessoa = 2,
                            Nome = "Carlos Oliveira",
                            Telefone = "11234567890"
                        },
                        new
                        {
                            Id = 4,
                            IdPessoa = 3,
                            Nome = "Ana Souza",
                            Telefone = "11987654321"
                        },
                        new
                        {
                            Id = 5,
                            IdPessoa = 3,
                            Nome = "Pedro Santos",
                            Telefone = "11765432109"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRetirada")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destinatario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdApartamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdApartamento");

                    b.ToTable("Entregas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Destinatario = "Joao Guilherme",
                            IdApartamento = 1
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "56751898901",
                            Nome = "João Gomes",
                            Telefone = "11924316523"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "63158658205",
                            Nome = "Paola Oliveira",
                            Telefone = "11975231678"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "27458823908",
                            Nome = "Marilia Mendonça",
                            Telefone = "11937512056"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "32152898910",
                            Nome = "Sorriso Maroto",
                            Telefone = "11987618735"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaComumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAreaComum")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaComumId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdApartamento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            IdApartamento = 1,
                            Nome = "UsuarioAdmin",
                            PasswordHash = new byte[] { 123, 86, 211, 111, 73, 218, 39, 44, 171, 229, 182, 183, 199, 126, 50, 135, 19, 78, 148, 157, 31, 142, 226, 196, 172, 253, 11, 106, 52, 50, 227, 99, 109, 252, 185, 224, 20, 18, 203, 176, 48, 181, 80, 116, 210, 195, 236, 208, 254, 170, 239, 120, 61, 205, 88, 138, 161, 198, 113, 55, 200, 143, 139, 175 },
                            PasswordSalt = new byte[] { 234, 190, 179, 79, 211, 53, 203, 165, 109, 70, 115, 85, 193, 149, 203, 143, 161, 217, 139, 97, 146, 23, 58, 51, 233, 196, 58, 193, 219, 84, 11, 21, 89, 243, 61, 169, 125, 108, 193, 45, 199, 38, 11, 140, 119, 18, 167, 69, 118, 172, 178, 228, 150, 176, 144, 153, 71, 95, 14, 84, 116, 160, 227, 151, 215, 0, 72, 32, 41, 61, 187, 172, 125, 234, 208, 11, 82, 158, 14, 165, 67, 114, 83, 11, 133, 50, 34, 175, 186, 253, 247, 86, 206, 64, 255, 133, 186, 162, 12, 252, 12, 61, 186, 200, 95, 177, 50, 85, 24, 244, 181, 77, 154, 165, 147, 184, 21, 158, 157, 249, 240, 78, 254, 25, 200, 41, 237, 77 },
                            Perfil = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Email = "UsuarioSindico@gmail.com",
                            IdApartamento = 2,
                            Nome = "UsuarioSindico",
                            PasswordHash = new byte[] { 123, 86, 211, 111, 73, 218, 39, 44, 171, 229, 182, 183, 199, 126, 50, 135, 19, 78, 148, 157, 31, 142, 226, 196, 172, 253, 11, 106, 52, 50, 227, 99, 109, 252, 185, 224, 20, 18, 203, 176, 48, 181, 80, 116, 210, 195, 236, 208, 254, 170, 239, 120, 61, 205, 88, 138, 161, 198, 113, 55, 200, 143, 139, 175 },
                            PasswordSalt = new byte[] { 234, 190, 179, 79, 211, 53, 203, 165, 109, 70, 115, 85, 193, 149, 203, 143, 161, 217, 139, 97, 146, 23, 58, 51, 233, 196, 58, 193, 219, 84, 11, 21, 89, 243, 61, 169, 125, 108, 193, 45, 199, 38, 11, 140, 119, 18, 167, 69, 118, 172, 178, 228, 150, 176, 144, 153, 71, 95, 14, 84, 116, 160, 227, 151, 215, 0, 72, 32, 41, 61, 187, 172, 125, 234, 208, 11, 82, 158, 14, 165, 67, 114, 83, 11, 133, 50, 34, 175, 186, 253, 247, 86, 206, 64, 255, 133, 186, 162, 12, 252, 12, 61, 186, 200, 95, 177, 50, 85, 24, 244, 181, 77, 154, 165, 147, 184, 21, 158, 157, 249, 240, 78, 254, 25, 200, 41, 237, 77 },
                            Perfil = "Sindico"
                        },
                        new
                        {
                            Id = 4,
                            Email = "UsuarioMorador@gmail.com",
                            IdApartamento = 3,
                            Nome = "UsuarioMorador",
                            PasswordHash = new byte[] { 123, 86, 211, 111, 73, 218, 39, 44, 171, 229, 182, 183, 199, 126, 50, 135, 19, 78, 148, 157, 31, 142, 226, 196, 172, 253, 11, 106, 52, 50, 227, 99, 109, 252, 185, 224, 20, 18, 203, 176, 48, 181, 80, 116, 210, 195, 236, 208, 254, 170, 239, 120, 61, 205, 88, 138, 161, 198, 113, 55, 200, 143, 139, 175 },
                            PasswordSalt = new byte[] { 234, 190, 179, 79, 211, 53, 203, 165, 109, 70, 115, 85, 193, 149, 203, 143, 161, 217, 139, 97, 146, 23, 58, 51, 233, 196, 58, 193, 219, 84, 11, 21, 89, 243, 61, 169, 125, 108, 193, 45, 199, 38, 11, 140, 119, 18, 167, 69, 118, 172, 178, 228, 150, 176, 144, 153, 71, 95, 14, 84, 116, 160, 227, 151, 215, 0, 72, 32, 41, 61, 187, 172, 125, 234, 208, 11, 82, 158, 14, 165, 67, 114, 83, 11, 133, 50, 34, 175, 186, 253, 247, 86, 206, 64, 255, 133, 186, 162, 12, 252, 12, 61, 186, 200, 95, 177, 50, 85, 24, 244, 181, 77, 154, 165, 147, 184, 21, 158, 157, 249, 240, 78, 254, 25, 200, 41, 237, 77 },
                            Perfil = "Morador"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.ApartPessoa", b =>
                {
                    b.HasOne("CondominusApi.Models.Apartamento", "Apartamento")
                        .WithMany("Pessoas")
                        .HasForeignKey("IdApartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany("Apartamentos")
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CondominusApi.Models.Usuario", null)
                        .WithMany("Apartamentos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Apartamento");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.HasOne("CondominusApi.Models.Condominio", "Condominio")
                        .WithMany("Apartamentos")
                        .HasForeignKey("IdCondominio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("CondominusApi.Models.Aviso", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Dependente", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany("Dependentes")
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Entrega", b =>
                {
                    b.HasOne("CondominusApi.Models.Apartamento", "Apartamento")
                        .WithMany("Entregas")
                        .HasForeignKey("IdApartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartamento");
                });

            modelBuilder.Entity("CondominusApi.Models.Reserva", b =>
                {
                    b.HasOne("CondominusApi.Models.AreaComum", "AreaComum")
                        .WithMany()
                        .HasForeignKey("AreaComumId");

                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.Navigation("AreaComum");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.Navigation("Entregas");

                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("CondominusApi.Models.Condominio", b =>
                {
                    b.Navigation("Apartamentos");
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.Navigation("Apartamentos");

                    b.Navigation("Dependentes");
                });

            modelBuilder.Entity("CondominusApi.Models.Usuario", b =>
                {
                    b.Navigation("Apartamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
