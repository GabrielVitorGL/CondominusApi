// <auto-generated />
using System;
using CondominusApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CondominusApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230923153548_BaseFinal")]
    partial class BaseFinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CondominioId")
                        .HasColumnType("int");

                    b.Property<int>("IdCondominio")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apartamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCondominio = 0,
                            Numero = "A001",
                            Telefone = "11912345678"
                        },
                        new
                        {
                            Id = 2,
                            IdCondominio = 0,
                            Numero = "B002",
                            Telefone = "11912345678"
                        },
                        new
                        {
                            Id = 3,
                            IdCondominio = 0,
                            Numero = "C003",
                            Telefone = "11887654321"
                        },
                        new
                        {
                            Id = 4,
                            IdCondominio = 0,
                            Numero = "E005",
                            Telefone = "11955555555"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.AreaComum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AreasComuns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidade = 50,
                            Nome = "Salão de Festas"
                        },
                        new
                        {
                            Id = 2,
                            Capacidade = 30,
                            Nome = "Churrasqueira"
                        },
                        new
                        {
                            Id = 3,
                            Capacidade = 20,
                            Nome = "Sala de Jogos"
                        },
                        new
                        {
                            Id = 4,
                            Capacidade = 10,
                            Nome = "Piscina"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Condominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Condominios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Endereco = "Rua Guaranésia, 1070",
                            Nome = "Vila Nova Maria"
                        },
                        new
                        {
                            Id = 2,
                            Endereco = "Rua Paulo Andrighetti, 1573",
                            Nome = "Condomínio Aquarella Pari Colore"
                        },
                        new
                        {
                            Id = 3,
                            Endereco = "Rua Paulo Andrighetti, 449",
                            Nome = "Condomínio Edifício Antônio Walter Santiago"
                        },
                        new
                        {
                            Id = 4,
                            Endereco = "Rua Eugênio de Freitas, 525",
                            Nome = "Condomínio Edifício Veneza"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRetirada")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.Property<string>("Remetente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Entregas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataEntrega = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(976),
                            DataRetirada = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(987),
                            IdPessoa = 0,
                            Remetente = "Sorriso Maroto"
                        },
                        new
                        {
                            Id = 2,
                            DataEntrega = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(988),
                            DataRetirada = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(989),
                            IdPessoa = 0,
                            Remetente = "Marilia Mendonça"
                        },
                        new
                        {
                            Id = 3,
                            DataEntrega = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(990),
                            DataRetirada = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(990),
                            IdPessoa = 0,
                            Remetente = "Paola Oliveira"
                        },
                        new
                        {
                            Id = 4,
                            DataEntrega = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(991),
                            DataRetirada = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(992),
                            IdPessoa = 0,
                            Remetente = "João Gomes"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApartamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("CondominioId")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdApartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdCondominio")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApartamentoId");

                    b.HasIndex("CondominioId");

                    b.ToTable("Pessoas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "56751898901",
                            IdApartamento = 0,
                            IdCondominio = 0,
                            Nome = "João Gomes",
                            Telefone = "11924316523"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "63158658205",
                            IdApartamento = 0,
                            IdCondominio = 0,
                            Nome = "Paola Oliveira",
                            Telefone = "11975231678"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "27458823908",
                            IdApartamento = 0,
                            IdCondominio = 0,
                            Nome = "Marilia Mendonça",
                            Telefone = "11937512056"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "32152898910",
                            IdApartamento = 0,
                            IdCondominio = 0,
                            Nome = "Sorriso Maroto",
                            Telefone = "11987618735"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaComumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAreaComum")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaComumId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataReserva = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(1025),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 2,
                            DataReserva = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(1026),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 3,
                            DataReserva = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(1027),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 4,
                            DataReserva = new DateTime(2023, 9, 23, 12, 35, 48, 541, DateTimeKind.Local).AddTicks(1028),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Nome = "UsuarioAdmin",
                            PasswordHash = new byte[] { 157, 142, 237, 117, 236, 151, 56, 133, 167, 218, 252, 90, 28, 217, 229, 122, 210, 204, 148, 144, 117, 248, 206, 208, 10, 12, 172, 52, 115, 235, 91, 135, 13, 118, 30, 239, 116, 159, 242, 57, 253, 140, 16, 141, 72, 135, 76, 47, 87, 251, 63, 26, 125, 193, 168, 29, 154, 216, 206, 72, 46, 205, 80, 76 },
                            PasswordSalt = new byte[] { 89, 151, 151, 250, 180, 108, 212, 72, 124, 202, 251, 253, 165, 247, 4, 173, 47, 83, 106, 193, 214, 183, 116, 252, 213, 173, 37, 154, 123, 24, 191, 160, 134, 12, 74, 14, 153, 225, 109, 119, 53, 80, 22, 129, 136, 3, 169, 86, 74, 134, 222, 249, 71, 231, 94, 41, 252, 243, 46, 163, 174, 226, 43, 195, 89, 148, 165, 160, 89, 21, 29, 255, 173, 183, 207, 104, 161, 2, 164, 236, 12, 153, 153, 204, 122, 16, 42, 86, 232, 2, 149, 69, 59, 20, 132, 41, 183, 65, 219, 190, 59, 205, 103, 91, 53, 32, 201, 203, 101, 254, 28, 165, 228, 186, 218, 205, 244, 96, 229, 249, 218, 236, 160, 41, 189, 203, 236, 12 },
                            Perfil = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Email = "email@gmail.com",
                            Nome = "UsuarioSindico",
                            PasswordHash = new byte[] { 157, 142, 237, 117, 236, 151, 56, 133, 167, 218, 252, 90, 28, 217, 229, 122, 210, 204, 148, 144, 117, 248, 206, 208, 10, 12, 172, 52, 115, 235, 91, 135, 13, 118, 30, 239, 116, 159, 242, 57, 253, 140, 16, 141, 72, 135, 76, 47, 87, 251, 63, 26, 125, 193, 168, 29, 154, 216, 206, 72, 46, 205, 80, 76 },
                            PasswordSalt = new byte[] { 89, 151, 151, 250, 180, 108, 212, 72, 124, 202, 251, 253, 165, 247, 4, 173, 47, 83, 106, 193, 214, 183, 116, 252, 213, 173, 37, 154, 123, 24, 191, 160, 134, 12, 74, 14, 153, 225, 109, 119, 53, 80, 22, 129, 136, 3, 169, 86, 74, 134, 222, 249, 71, 231, 94, 41, 252, 243, 46, 163, 174, 226, 43, 195, 89, 148, 165, 160, 89, 21, 29, 255, 173, 183, 207, 104, 161, 2, 164, 236, 12, 153, 153, 204, 122, 16, 42, 86, 232, 2, 149, 69, 59, 20, 132, 41, 183, 65, 219, 190, 59, 205, 103, 91, 53, 32, 201, 203, 101, 254, 28, 165, 228, 186, 218, 205, 244, 96, 229, 249, 218, 236, 160, 41, 189, 203, 236, 12 },
                            Perfil = "Sindico"
                        },
                        new
                        {
                            Id = 4,
                            Email = "email@gmail.com",
                            Nome = "UsuarioMorador",
                            PasswordHash = new byte[] { 157, 142, 237, 117, 236, 151, 56, 133, 167, 218, 252, 90, 28, 217, 229, 122, 210, 204, 148, 144, 117, 248, 206, 208, 10, 12, 172, 52, 115, 235, 91, 135, 13, 118, 30, 239, 116, 159, 242, 57, 253, 140, 16, 141, 72, 135, 76, 47, 87, 251, 63, 26, 125, 193, 168, 29, 154, 216, 206, 72, 46, 205, 80, 76 },
                            PasswordSalt = new byte[] { 89, 151, 151, 250, 180, 108, 212, 72, 124, 202, 251, 253, 165, 247, 4, 173, 47, 83, 106, 193, 214, 183, 116, 252, 213, 173, 37, 154, 123, 24, 191, 160, 134, 12, 74, 14, 153, 225, 109, 119, 53, 80, 22, 129, 136, 3, 169, 86, 74, 134, 222, 249, 71, 231, 94, 41, 252, 243, 46, 163, 174, 226, 43, 195, 89, 148, 165, 160, 89, 21, 29, 255, 173, 183, 207, 104, 161, 2, 164, 236, 12, 153, 153, 204, 122, 16, 42, 86, 232, 2, 149, 69, 59, 20, 132, 41, 183, 65, 219, 190, 59, 205, 103, 91, 53, 32, 201, 203, 101, 254, 28, 165, 228, 186, 218, 205, 244, 96, 229, 249, 218, 236, 160, 41, 189, 203, 236, 12 },
                            Perfil = "Morador"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.HasOne("CondominusApi.Models.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId");

                    b.HasOne("CondominusApi.Models.Usuario", null)
                        .WithMany("Apartamentos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("CondominusApi.Models.Entrega", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.HasOne("CondominusApi.Models.Apartamento", "Apartamento")
                        .WithMany()
                        .HasForeignKey("ApartamentoId");

                    b.HasOne("CondominusApi.Models.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId");

                    b.Navigation("Apartamento");

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("CondominusApi.Models.Reserva", b =>
                {
                    b.HasOne("CondominusApi.Models.AreaComum", "AreaComum")
                        .WithMany()
                        .HasForeignKey("AreaComumId");

                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.Navigation("AreaComum");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Usuario", b =>
                {
                    b.Navigation("Apartamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
