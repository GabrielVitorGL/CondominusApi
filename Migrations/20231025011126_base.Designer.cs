// <auto-generated />
using System;
using CondominusApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CondominusApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231025011126_base")]
    partial class @base
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CondominusApi.Models.ApartPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("IdApartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartamentoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("ApartPessoas");
                });

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CondominioId")
                        .HasColumnType("int");

                    b.Property<int>("IdCondominio")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apartamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCondominio = 0,
                            Numero = "A001",
                            Telefone = "11912345678"
                        },
                        new
                        {
                            Id = 2,
                            IdCondominio = 0,
                            Numero = "B002",
                            Telefone = "11912345678"
                        },
                        new
                        {
                            Id = 3,
                            IdCondominio = 0,
                            Numero = "C003",
                            Telefone = "11887654321"
                        },
                        new
                        {
                            Id = 4,
                            IdCondominio = 0,
                            Numero = "E005",
                            Telefone = "11955555555"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.AreaComum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AreasComuns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidade = 50,
                            Nome = "Salão de Festas"
                        },
                        new
                        {
                            Id = 2,
                            Capacidade = 30,
                            Nome = "Churrasqueira"
                        },
                        new
                        {
                            Id = 3,
                            Capacidade = 20,
                            Nome = "Sala de Jogos"
                        },
                        new
                        {
                            Id = 4,
                            Capacidade = 10,
                            Nome = "Piscina"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Aviso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Assunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Avisos");
                });

            modelBuilder.Entity("CondominusApi.Models.Condominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPortaria")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortariaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortariaId");

                    b.ToTable("Condominios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Endereco = "Rua Guaranésia, 1070",
                            IdPortaria = 0,
                            Nome = "Vila Nova Maria"
                        },
                        new
                        {
                            Id = 2,
                            Endereco = "Rua Paulo Andrighetti, 1573",
                            IdPortaria = 0,
                            Nome = "Condomínio Aquarella Pari Colore"
                        },
                        new
                        {
                            Id = 3,
                            Endereco = "Rua Paulo Andrighetti, 449",
                            IdPortaria = 0,
                            Nome = "Condomínio Edifício Antônio Walter Santiago"
                        },
                        new
                        {
                            Id = 4,
                            Endereco = "Rua Eugênio de Freitas, 525",
                            IdPortaria = 0,
                            Nome = "Condomínio Edifício Veneza"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Dependente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Dependentes");
                });

            modelBuilder.Entity("CondominusApi.Models.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRetirada")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int?>("PortariaId")
                        .HasColumnType("int");

                    b.Property<string>("Remetente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("PortariaId");

                    b.ToTable("Entregas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataEntrega = new DateTime(2023, 10, 24, 22, 11, 26, 398, DateTimeKind.Local).AddTicks(8456),
                            DataRetirada = new DateTime(2023, 10, 24, 22, 11, 26, 398, DateTimeKind.Local).AddTicks(8465),
                            IdPessoa = 0,
                            Remetente = "Sorriso Maroto"
                        },
                        new
                        {
                            Id = 2,
                            DataEntrega = new DateTime(2023, 10, 24, 22, 11, 26, 398, DateTimeKind.Local).AddTicks(8467),
                            DataRetirada = new DateTime(2023, 10, 24, 22, 11, 26, 398, DateTimeKind.Local).AddTicks(8467),
                            IdPessoa = 0,
                            Remetente = "Marilia Mendonça"
                        },
                        new
                        {
                            Id = 3,
                            DataEntrega = new DateTime(2023, 10, 24, 22, 11, 26, 398, DateTimeKind.Local).AddTicks(8468),
                            DataRetirada = new DateTime(2023, 10, 24, 22, 11, 26, 398, DateTimeKind.Local).AddTicks(8469),
                            IdPessoa = 0,
                            Remetente = "Paola Oliveira"
                        },
                        new
                        {
                            Id = 4,
                            DataEntrega = new DateTime(2023, 10, 24, 22, 11, 26, 398, DateTimeKind.Local).AddTicks(8470),
                            DataRetirada = new DateTime(2023, 10, 24, 22, 11, 26, 398, DateTimeKind.Local).AddTicks(8470),
                            IdPessoa = 0,
                            Remetente = "João Gomes"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "56751898901",
                            Nome = "João Gomes",
                            Telefone = "11924316523"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "63158658205",
                            Nome = "Paola Oliveira",
                            Telefone = "11975231678"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "27458823908",
                            Nome = "Marilia Mendonça",
                            Telefone = "11937512056"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "32152898910",
                            Nome = "Sorriso Maroto",
                            Telefone = "11987618735"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Portaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Portarias");
                });

            modelBuilder.Entity("CondominusApi.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaComumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAreaComum")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaComumId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAreaComum = 0,
                            IdPessoa = 0
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Nome = "UsuarioAdmin",
                            PasswordHash = new byte[] { 151, 49, 231, 172, 140, 246, 26, 165, 92, 101, 233, 102, 60, 37, 230, 163, 190, 194, 49, 238, 125, 13, 242, 85, 82, 34, 51, 63, 1, 86, 67, 252, 208, 199, 67, 144, 187, 166, 235, 244, 2, 205, 118, 204, 120, 80, 156, 199, 85, 93, 25, 110, 71, 53, 194, 25, 25, 86, 205, 180, 246, 13, 5, 78 },
                            PasswordSalt = new byte[] { 213, 82, 207, 244, 102, 2, 120, 199, 121, 23, 145, 87, 100, 237, 112, 62, 108, 75, 189, 192, 195, 98, 37, 177, 218, 90, 116, 99, 100, 117, 47, 244, 32, 254, 154, 186, 228, 246, 254, 139, 26, 205, 24, 138, 225, 189, 132, 217, 117, 230, 179, 212, 41, 185, 68, 4, 48, 79, 199, 171, 5, 144, 72, 120, 36, 131, 82, 10, 239, 122, 239, 200, 195, 136, 98, 251, 11, 98, 107, 194, 114, 79, 50, 24, 66, 155, 200, 200, 10, 121, 71, 39, 232, 1, 45, 68, 101, 53, 164, 229, 164, 40, 131, 163, 191, 162, 42, 208, 68, 11, 49, 168, 36, 220, 76, 217, 239, 254, 158, 125, 245, 171, 244, 113, 233, 212, 48, 176 },
                            Perfil = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Email = "email@gmail.com",
                            Nome = "UsuarioSindico",
                            PasswordHash = new byte[] { 151, 49, 231, 172, 140, 246, 26, 165, 92, 101, 233, 102, 60, 37, 230, 163, 190, 194, 49, 238, 125, 13, 242, 85, 82, 34, 51, 63, 1, 86, 67, 252, 208, 199, 67, 144, 187, 166, 235, 244, 2, 205, 118, 204, 120, 80, 156, 199, 85, 93, 25, 110, 71, 53, 194, 25, 25, 86, 205, 180, 246, 13, 5, 78 },
                            PasswordSalt = new byte[] { 213, 82, 207, 244, 102, 2, 120, 199, 121, 23, 145, 87, 100, 237, 112, 62, 108, 75, 189, 192, 195, 98, 37, 177, 218, 90, 116, 99, 100, 117, 47, 244, 32, 254, 154, 186, 228, 246, 254, 139, 26, 205, 24, 138, 225, 189, 132, 217, 117, 230, 179, 212, 41, 185, 68, 4, 48, 79, 199, 171, 5, 144, 72, 120, 36, 131, 82, 10, 239, 122, 239, 200, 195, 136, 98, 251, 11, 98, 107, 194, 114, 79, 50, 24, 66, 155, 200, 200, 10, 121, 71, 39, 232, 1, 45, 68, 101, 53, 164, 229, 164, 40, 131, 163, 191, 162, 42, 208, 68, 11, 49, 168, 36, 220, 76, 217, 239, 254, 158, 125, 245, 171, 244, 113, 233, 212, 48, 176 },
                            Perfil = "Sindico"
                        },
                        new
                        {
                            Id = 4,
                            Email = "email@gmail.com",
                            Nome = "UsuarioMorador",
                            PasswordHash = new byte[] { 151, 49, 231, 172, 140, 246, 26, 165, 92, 101, 233, 102, 60, 37, 230, 163, 190, 194, 49, 238, 125, 13, 242, 85, 82, 34, 51, 63, 1, 86, 67, 252, 208, 199, 67, 144, 187, 166, 235, 244, 2, 205, 118, 204, 120, 80, 156, 199, 85, 93, 25, 110, 71, 53, 194, 25, 25, 86, 205, 180, 246, 13, 5, 78 },
                            PasswordSalt = new byte[] { 213, 82, 207, 244, 102, 2, 120, 199, 121, 23, 145, 87, 100, 237, 112, 62, 108, 75, 189, 192, 195, 98, 37, 177, 218, 90, 116, 99, 100, 117, 47, 244, 32, 254, 154, 186, 228, 246, 254, 139, 26, 205, 24, 138, 225, 189, 132, 217, 117, 230, 179, 212, 41, 185, 68, 4, 48, 79, 199, 171, 5, 144, 72, 120, 36, 131, 82, 10, 239, 122, 239, 200, 195, 136, 98, 251, 11, 98, 107, 194, 114, 79, 50, 24, 66, 155, 200, 200, 10, 121, 71, 39, 232, 1, 45, 68, 101, 53, 164, 229, 164, 40, 131, 163, 191, 162, 42, 208, 68, 11, 49, 168, 36, 220, 76, 217, 239, 254, 158, 125, 245, 171, 244, 113, 233, 212, 48, 176 },
                            Perfil = "Morador"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.ApartPessoa", b =>
                {
                    b.HasOne("CondominusApi.Models.Apartamento", "Apartamento")
                        .WithMany()
                        .HasForeignKey("ApartamentoId");

                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.Navigation("Apartamento");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.HasOne("CondominusApi.Models.Condominio", "Condominio")
                        .WithMany("Apartamentos")
                        .HasForeignKey("CondominioId");

                    b.HasOne("CondominusApi.Models.Usuario", null)
                        .WithMany("Apartamentos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("CondominusApi.Models.Aviso", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Condominio", b =>
                {
                    b.HasOne("CondominusApi.Models.Portaria", "Portaria")
                        .WithMany()
                        .HasForeignKey("PortariaId");

                    b.Navigation("Portaria");
                });

            modelBuilder.Entity("CondominusApi.Models.Dependente", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", null)
                        .WithMany("Dependentes")
                        .HasForeignKey("PessoaId");
                });

            modelBuilder.Entity("CondominusApi.Models.Entrega", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.HasOne("CondominusApi.Models.Portaria", null)
                        .WithMany("Entregas")
                        .HasForeignKey("PortariaId");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Reserva", b =>
                {
                    b.HasOne("CondominusApi.Models.AreaComum", "AreaComum")
                        .WithMany()
                        .HasForeignKey("AreaComumId");

                    b.HasOne("CondominusApi.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.Navigation("AreaComum");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.Condominio", b =>
                {
                    b.Navigation("Apartamentos");
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.Navigation("Dependentes");
                });

            modelBuilder.Entity("CondominusApi.Models.Portaria", b =>
                {
                    b.Navigation("Entregas");
                });

            modelBuilder.Entity("CondominusApi.Models.Usuario", b =>
                {
                    b.Navigation("Apartamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
